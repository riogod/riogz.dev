name: Build and deploy frontend
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
#        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      print_tags:
        description: 'True to print to STDOUT'
#        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
#        required: true
        type: string
#      environment:
#        description: 'Environment to run tests against'
#        type: environment
#        required: true

env:
  DOCKER_HUB_USER: riogod
  IMAGE_NAME: riogz.dev-client

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build:client

      - name: Create Artifact
        uses: actions/upload-artifact@v3
        with:
          name: pl-client
          path: packages/pl.client/dist

  docker:
    name: Make docker
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: test
        run: ls

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: pl-client
          path: dist

      - name: test
        run: ls

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}
          tags: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/pl.client/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  run:
    name: Update image
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: multiple command
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_SERVER_SSHKEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            ls
            cd /usr/local/riogz.dev
            docker-compose pull 
            docker-compose up -d
#            docker pull ${{ env.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}:latest
#            docker stop helloworld
#            docker start helloworld
#            docker image prune -a -f
